.TH HSH 1 "December 2024" "1.0" "Simple Shell Manual"
.SH NAME
hsh \- A simple UNIX command-line interpreter.
.SH SYNOPSIS
.B hsh
.SH DESCRIPTION
The Simple Shell Project is a foundational implementation of a UNIX command-line interpreter. 
It executes commands entered by the user, interacts with the operating system, and focuses on core concepts such as command execution and environment variable handling.

This shell is designed for educational purposes to demonstrate how basic shell operations are implemented.

.SH FEATURES
.TP
\- Reads user commands and executes them using system calls.
.TP
\- Supports built-in commands like \fBexit\fP and \fBenv\fP.
.TP
\- Parses user input into arguments for easy execution.
.TP
\- Searches for executable commands in the system's \fBPATH\fP.
.TP
\- Includes efficient memory management functions.
.TP
\- Provides error handling for invalid commands and input errors.

.SH USAGE
To compile and run the Simple Shell:
.PP
1. Open a terminal.
.PP
2. Navigate to the directory containing the source files.
.PP
3. Compile the project:
.EX
gcc -Wall -Werror -Wextra -pedantic -std=gnu89 *.c -o hsh
.EE
4. Run the compiled executable:
.EX
./hsh
.EE

.SH ALLOWED FUNCTIONS
This shell relies on the following functions and system calls:
.TP
\fBaccess, chdir, close, closedir, execve, exit, fork, getline,\fP and many more. See the project's source code for a comprehensive list.

.SH FILES
.TP
.B shell.h
Header file containing function prototypes and necessary libraries.
.TP
.B shell_main.c
Contains the main function, managing the shell loop, input, and built-in commands like \fBexit\fP and \fBenv\fP.
.TP
.B line_reader.c
Reads user input while handling errors and end-of-file scenarios.
.TP
.B process_line.c
Forks processes and executes commands using \fBexecve\fP.
.TP
.B _env.c
Prints environment variables to standard output.
.TP
.B check_path.c
Validates if a command exists in the system's \fBPATH\fP.
.TP
.B parse_the_line.c
Splits user input into tokens for easier execution.
.TP
.B free.c
Manages memory deallocation for dynamically allocated arrays.

.SH AUTHORS
This project was created by:
.TP
\- Yassine Gharbi (\fIhttps://github.com/Yassine-Gharbi86\fP)
.TP
\- Elyes Ben Naceur (\fIhttps://github.com/ElyesBN44\fP)
.SH SEE ALSO
\fBbash(1)\fP, \fBsh(1)\fP
